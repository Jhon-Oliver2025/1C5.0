#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para analisar dados dispon√≠veis na API BTC
"""

import requests
import json

def analyze_btc_data():
    """Analisa todos os dados dispon√≠veis na API BTC"""
    token = '6b4cd525-58c3-46cf-a0d2-60c447d06a72'
    
    try:
        response = requests.get(
            "http://localhost:5000/api/btc-signals/metrics",
            headers={"Authorization": f"Bearer {token}"}
        )
        
        if response.status_code == 200:
            data = response.json()
            
            print("=== DADOS DISPON√çVEIS NA API BTC ===")
            
            print("\n1. BTC ANALYSIS:")
            btc_analysis = data['data']['btc_analysis']
            for key, value in btc_analysis.items():
                if key != 'timeframes':
                    print(f"  {key}: {value}")
            
            print("\n2. BTC PRICE DATA:")
            btc_price = data['data']['btc_price_data']
            for key, value in btc_price.items():
                print(f"  {key}: {value}")
            
            print("\n3. TIMEFRAMES (1h):")
            tf_1h = btc_analysis['timeframes']['1h']
            for key, value in tf_1h.items():
                print(f"  {key}: {value}")
            
            print("\n4. TIMEFRAMES (4h):")
            tf_4h = btc_analysis['timeframes']['4h']
            for key, value in tf_4h.items():
                print(f"  {key}: {value}")
                
            print("\n5. CONFIRMATION METRICS:")
            conf_metrics = data['data']['confirmation_metrics']
            for key, value in conf_metrics.items():
                print(f"  {key}: {value}")
                
            print("\n=== SUGEST√ïES PARA O PAINEL ===")
            print("\nüìä INDICADORES T√âCNICOS DISPON√çVEIS:")
            print("  ‚Ä¢ RSI (1h e 4h): For√ßa relativa")
            print("  ‚Ä¢ MACD: Converg√™ncia/Diverg√™ncia")
            print("  ‚Ä¢ EMA 20/50: M√©dias m√≥veis")
            print("  ‚Ä¢ ATR: Volatilidade")
            print("  ‚Ä¢ Pivot Points: Suporte/Resist√™ncia")
            
            print("\nüí∞ DADOS DE PRE√áO:")
            print("  ‚Ä¢ M√°xima/M√≠nima 24h")
            print("  ‚Ä¢ Timestamp da √∫ltima atualiza√ß√£o")
            
            print("\nüìà AN√ÅLISE MULTI-TIMEFRAME:")
            print("  ‚Ä¢ Compara√ß√£o 1h vs 4h")
            print("  ‚Ä¢ Alinhamento de EMAs")
            print("  ‚Ä¢ Momentum por timeframe")
            
        else:
            print(f"Erro: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")

def main():
    analyze_btc_data()

if __name__ == "__main__":
    main()